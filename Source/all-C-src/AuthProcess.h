/* DO NOT EDIT THIS FILE - it is machine generated *//* Generated for class glguerin.authkit.imp.macosx.AuthProcess *//* Generated from AuthProcess.java*/#ifndef _Included_glguerin_authkit_imp_macosx_AuthProcess#define _Included_glguerin_authkit_imp_macosx_AuthProcess#include <jni.h>#ifdef __cplusplusextern "C" {#endif/**	 AuthProcess represents the privileged child-process created by MacOSXAuthorization.	 This class owes much of its decrepitude to the decrepitude of the	 Authorization Services API function that runs the privileged process.	 That is, this class sucks because AuthorizationExecuteWithPrivileges() sucks.	<p>	 The nested classes FIn and FOut are needed because I have no details on how Java's normal	 file-descriptor class, FileDescriptor, is actually implemented in a given JVM.	 IMHO, exposing FileDescriptor without a clearly defined API or rationale for it was a mistake.	 It should be internal, or it should have a reason for being public. 	 As it now stands, it's just a pointless impediment to clarity and portability.	 @author Gregory Guerin*//* * Class:     glguerin_authkit_imp_macosx_AuthProcess * Method:    read * Signature: (I[BII)I *//**	 Read bytes, returning count actually read,	 or 0 on EOF, or -errno on error.	<p>	 The specific reasons for failure may be distinguished by decoding negative numbers	 as errno negatives, or all failures can be lumped together into one IOException flavor.*/JNIEXPORT jint JNICALL Java_glguerin_authkit_imp_macosx_AuthProcess_read	(JNIEnv *, jclass, jint, jbyteArray, jint, jint);/* * Class:     glguerin_authkit_imp_macosx_AuthProcess * Method:    write * Signature: (I[BII)I *//**	 Write bytes, returning count actually written,	 or -errno on error.	<p>	 The specific reasons for failure may be distinguished by decoding negative numbers	 as errno negatives, or all failures can be lumped together into one IOException flavor.*/JNIEXPORT jint JNICALL Java_glguerin_authkit_imp_macosx_AuthProcess_write	(JNIEnv *, jclass, jint, jbyteArray, jint, jint);/* * Class:     glguerin_authkit_imp_macosx_AuthProcess * Method:    close * Signature: (I)I *//**	 Close the file-descriptor, returning 0 on success or errno on failure.	 Unlike read() and write(), the actual errno value, not its negative, is returned.*/JNIEXPORT jint JNICALL Java_glguerin_authkit_imp_macosx_AuthProcess_close	(JNIEnv *, jclass, jint);#ifdef __cplusplus}#endif#endif