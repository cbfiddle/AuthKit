/*** Copyright 1998-2003 by Gregory L. Guerin.** Terms of use:**  - Briefly: OPEN SOURCE under Artistic License -- credit fairly, use freely.**  - Fully: <http://www.amug.org/~glguerin/sw/artistic-license.html>** This file is from the Authorization Toolkit for Java:**   <http://www.amug.org/~glguerin/sw/index.html#authkit> */package app.authkit.test;import glguerin.util.LibLoader;// --- Revision History ---// 09Nov2002 GLG  create/**** TestLoader tests the LibLoader class, which MacOSXAuthorization uses** to load its JNI library.** Args are taken as JNI-lib names to be loaded.  Success or failure is displayed.**** @author Gregory Guerin*/public class TestLoader  extends AuthTest{	private static String[] listProps =		{			"java.library.path",			"sun.boot.library.path",			"java.ext.dirs",			"java.class.path",			"java.home",			"user.dir",			"glguerin.util.LibLoader.imp",		};	/**	** Static entry point, when used as an application.	*/	public static void 	main( String[] args ) 	{		tell( "TestLoader.main(): starting..." );		// Force the LibLoader to be verbose.		LibLoader.isVerbose = true;		tellProperties( listProps );		// The makeLoader() method uses "glguerin.util.LibLoader.imp" property.		LibLoader loader = LibLoader.makeLoader();		tell( "LibLoader class: " + loader.getClass().getName() );		tell( "     loads from: " + loader.toString() );		tell( "" );		for ( int i = 0;  i < args.length; ++i )		{  tryLoading( loader, args[ i ] );  }		tell( "TestLoader.main(): done...\n" );	}	/**	** Try loading the libName with the loader.	*/	public static void	tryLoading( LibLoader loader, String libName )	{		try		{			loader.loadLibrary( libName );			tell( "Loaded: " + libName );		}		catch ( UnsatisfiedLinkError oops )		{  tell( "UnsatisfiedLinkError: " + libName + " -- " + oops.getMessage() );  }		catch ( Throwable why )		{  explain( why );  }		tell( "" );	}	/**	** Tell the properties and values.	*/	public static void	tellProperties( String[] propNames )	{		String  propName;		String  propValue;		tell( "-- System properties..." );		for ( int i = 0;  i < propNames.length;  ++i )		{			propName = propNames[ i ];			propValue = System.getProperty( propName, "<unknown>" );			tell( "  " + propName + " = " + propValue );		}		tell( "" );	}}